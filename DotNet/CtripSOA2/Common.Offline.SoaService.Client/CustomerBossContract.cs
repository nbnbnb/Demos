//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Offline.SoaService.Contract
{
    using System;
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System.Collections;
    using System.Xml.Schema;
    using System.ComponentModel;
    using System.Runtime.Serialization;
    using System.Collections.Generic;
    using CServiceStack.ProtoBuf;
    using CServiceStack.ServiceHost;
    using CServiceStack.Baiji.Specific;
    using System.Linq;
    using CServiceStack.Common.Types;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/VacationFlightContract.xsd")]
    [System.Xml.Serialization.XmlRootAttribute("CustomerBossCheckRequest", Namespace="http://tempuri.org/VacationFlightContract.xsd", IsNullable=false)]
    [DataContract(Name="CustomerBossCheckRequest", Namespace="http://tempuri.org/VacationFlightContract.xsd")]
    [ProtoContract()]
    public partial class CustomerBossCheckRequestType : ISpecificRecord
    {
        
        private RequestHeader headerField;
        
        private List<string> uIDField;
        
        public static readonly CServiceStack.Baiji.Schema.Schema SCHEMA = CServiceStack.Baiji.Schema.Schema.Parse(((("{\"type\":\"record\",\"name\":\"CustomerBossCheckRequestType\",\"namespace\":\"" + typeof(CustomerBossCheckRequestType).Namespace) 
                        + (("\",\"doc\":null,\"fields\":[{\"name\":\"Header\",\"type\":{\"type\":\"record\",\"name\":\"RequestHe" +
                            "ader\",\"namespace\":\"" + typeof(RequestHeader).Namespace) 
                        + (("\",\"doc\":null,\"fields\":[{\"name\":\"QueryChannel\",\"type\":{\"type\":\"enum\",\"name\":\"Query" +
                            "ChannelEnum\",\"namespace\":\"" + typeof(QueryChannelEnum).Namespace) 
                        + (@""",""doc"":null,""symbols"":[""None"",""Activity"",""Affiliates"",""AirBus"",""BI"",""Car"",""Corp"",""Cruise"",""CustomerService"",""Destination"",""Diy"",""Fun"",""FRT"",""Finance"",""Flight"",""Framework"",""GS"",""Group"",""HHTravel"",""Hotel"",""Platform"",""TravelShopping""]}},{""name"":""SubQueryChannel"",""type"":{""type"":""enum"",""name"":""SubQueryChannel"",""namespace"":""" + typeof(SubQueryChannel).Namespace)))) 
                        + "\",\"doc\":null,\"symbols\":[\"None\",\"Online\",\"Offline\",\"EnglishSite\",\"Hybrid\",\"H5\"]}}," +
                            "{\"name\":\"Version\",\"type\":\"int\"},{\"name\":\"RequestId\",\"type\":[\"string\",\"null\"]}]}}" +
                            ",{\"name\":\"UID\",\"type\":[{\"type\":\"array\",\"items\":[\"string\",\"null\"]},\"null\"]}]}"));
        
        /// <summary>
        /// 请求头设置
        /// </summary>
        [DataMember()]
        [ProtoMember(1)]
        public RequestHeader Header
        {
            get
            {
                return this.headerField;
            }
            set
            {
                this.headerField = value;
            }
        }
        
        /// <summary>
        /// 待查客户ID
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("UID")]
        [DataMember()]
        [ProtoMember(2)]
        public List<string> UID
        {
            get
            {
                if ((this.uIDField == null))
                {
                    this.uIDField = new List<string>();
                }
                return this.uIDField;
            }
            set
            {
                this.uIDField = value;
            }
        }
        
        public virtual CServiceStack.Baiji.Schema.Schema GetSchema()
        {
            return SCHEMA;
        }
        
        public virtual object Get(int fieldPos)
        {
            switch(fieldPos)
            {
                case 0: return this.Header;
                case 1: return this.UID;
                default: throw new CServiceStack.Baiji.Exceptions.BaijiRuntimeException("Bad index " + fieldPos + " in Get()");
            }
        }
        
        public virtual void Put(int fieldPos, object fieldValue)
        {
            switch(fieldPos)
            {
                case 0: this.Header = (RequestHeader)fieldValue; break;
                case 1: this.UID = (List<System.String>)fieldValue; break;
                default: throw new CServiceStack.Baiji.Exceptions.BaijiRuntimeException("Bad index " + fieldPos + " in Put()");
            }
        }
        
        public virtual object Get(string fieldName)
        {
            var recordSchema = GetSchema() as CServiceStack.Baiji.Schema.RecordSchema;
            if (recordSchema == null)
            {
                return null;
            }
            CServiceStack.Baiji.Schema.Field field;
            if (!recordSchema.TryGetField(fieldName, out field))
            {
                return null;
            }
            return Get(field.Pos);
        }
        
        public virtual void Put(string fieldName, object fieldValue)
        {
            var recordSchema = GetSchema() as CServiceStack.Baiji.Schema.RecordSchema;
            if (recordSchema == null)
            {
                return ;
            }
            CServiceStack.Baiji.Schema.Field field;
            if (!recordSchema.TryGetField(fieldName, out field))
            {
                return ;
            }
            Put(field.Pos, fieldValue);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/VacationFlightContract.xsd")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://tempuri.org/VacationFlightContract.xsd", IsNullable=true)]
    [DataContract(Namespace="http://tempuri.org/VacationFlightContract.xsd")]
    [ProtoContract()]
    public partial class RequestHeader : ISpecificRecord
    {
        
        private QueryChannelEnum queryChannelField;
        
        private SubQueryChannel subQueryChannelField;
        
        private int versionField;
        
        private string requestIdField;
        
        public static readonly CServiceStack.Baiji.Schema.Schema SCHEMA = CServiceStack.Baiji.Schema.Schema.Parse(((("{\"type\":\"record\",\"name\":\"RequestHeader\",\"namespace\":\"" + typeof(RequestHeader).Namespace) 
                        + (("\",\"doc\":null,\"fields\":[{\"name\":\"QueryChannel\",\"type\":{\"type\":\"enum\",\"name\":\"Query" +
                            "ChannelEnum\",\"namespace\":\"" + typeof(QueryChannelEnum).Namespace) 
                        + (@""",""doc"":null,""symbols"":[""None"",""Activity"",""Affiliates"",""AirBus"",""BI"",""Car"",""Corp"",""Cruise"",""CustomerService"",""Destination"",""Diy"",""Fun"",""FRT"",""Finance"",""Flight"",""Framework"",""GS"",""Group"",""HHTravel"",""Hotel"",""Platform"",""TravelShopping""]}},{""name"":""SubQueryChannel"",""type"":{""type"":""enum"",""name"":""SubQueryChannel"",""namespace"":""" + typeof(SubQueryChannel).Namespace))) 
                        + "\",\"doc\":null,\"symbols\":[\"None\",\"Online\",\"Offline\",\"EnglishSite\",\"Hybrid\",\"H5\"]}}," +
                            "{\"name\":\"Version\",\"type\":\"int\"},{\"name\":\"RequestId\",\"type\":[\"string\",\"null\"]}]}"));
        
        /// <summary>
        /// 渠道
        /// </summary>
        [DataMember()]
        [ProtoMember(1)]
        public QueryChannelEnum QueryChannel
        {
            get
            {
                return this.queryChannelField;
            }
            set
            {
                this.queryChannelField = value;
            }
        }
        
        /// <summary>
        /// 子渠道
        /// </summary>
        [DataMember()]
        [ProtoMember(2)]
        public SubQueryChannel SubQueryChannel
        {
            get
            {
                return this.subQueryChannelField;
            }
            set
            {
                this.subQueryChannelField = value;
            }
        }
        
        /// <summary>
        /// 版本号(默认1开始)
        /// </summary>
        [DataMember()]
        [ProtoMember(3)]
        public int Version
        {
            get
            {
                return this.versionField;
            }
            set
            {
                this.versionField = value;
            }
        }
        
        /// <summary>
        /// 请求ID(必须唯一，建议使用GUID)
        /// </summary>
        [DataMember()]
        [ProtoMember(4)]
        public string RequestId
        {
            get
            {
                return this.requestIdField;
            }
            set
            {
                this.requestIdField = value;
            }
        }
        
        public virtual CServiceStack.Baiji.Schema.Schema GetSchema()
        {
            return SCHEMA;
        }
        
        public virtual object Get(int fieldPos)
        {
            switch(fieldPos)
            {
                case 0: return this.QueryChannel;
                case 1: return this.SubQueryChannel;
                case 2: return this.Version;
                case 3: return this.RequestId;
                default: throw new CServiceStack.Baiji.Exceptions.BaijiRuntimeException("Bad index " + fieldPos + " in Get()");
            }
        }
        
        public virtual void Put(int fieldPos, object fieldValue)
        {
            switch(fieldPos)
            {
                case 0: this.QueryChannel = (QueryChannelEnum)fieldValue; break;
                case 1: this.SubQueryChannel = (SubQueryChannel)fieldValue; break;
                case 2: this.Version = (int)fieldValue; break;
                case 3: this.RequestId = (System.String)fieldValue; break;
                default: throw new CServiceStack.Baiji.Exceptions.BaijiRuntimeException("Bad index " + fieldPos + " in Put()");
            }
        }
        
        public virtual object Get(string fieldName)
        {
            var recordSchema = GetSchema() as CServiceStack.Baiji.Schema.RecordSchema;
            if (recordSchema == null)
            {
                return null;
            }
            CServiceStack.Baiji.Schema.Field field;
            if (!recordSchema.TryGetField(fieldName, out field))
            {
                return null;
            }
            return Get(field.Pos);
        }
        
        public virtual void Put(string fieldName, object fieldValue)
        {
            var recordSchema = GetSchema() as CServiceStack.Baiji.Schema.RecordSchema;
            if (recordSchema == null)
            {
                return ;
            }
            CServiceStack.Baiji.Schema.Field field;
            if (!recordSchema.TryGetField(fieldName, out field))
            {
                return ;
            }
            Put(field.Pos, fieldValue);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/VacationFlightContract.xsd")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://tempuri.org/VacationFlightContract.xsd", IsNullable=false)]
    [DataContract(Namespace="http://tempuri.org/VacationFlightContract.xsd")]
    [ProtoContract()]
    public enum SubQueryChannel
    {
        
        /// <remarks/>
        [EnumMember()]
        [ProtoEnum()]
        None,
        
        /// <remarks/>
        [EnumMember()]
        [ProtoEnum()]
        Online,
        
        /// <remarks/>
        [EnumMember()]
        [ProtoEnum()]
        Offline,
        
        /// <remarks/>
        [EnumMember()]
        [ProtoEnum()]
        EnglishSite,
        
        /// <remarks/>
        [EnumMember()]
        [ProtoEnum()]
        Hybrid,
        
        /// <remarks/>
        [EnumMember()]
        [ProtoEnum()]
        H5,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/VacationFlightContract.xsd")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://tempuri.org/VacationFlightContract.xsd", IsNullable=false)]
    [DataContract(Namespace="http://tempuri.org/VacationFlightContract.xsd")]
    [ProtoContract()]
    public enum QueryChannelEnum
    {
        
        /// <remarks/>
        [EnumMember()]
        [ProtoEnum()]
        None,
        
        /// <remarks/>
        [EnumMember()]
        [ProtoEnum()]
        Activity,
        
        /// <remarks/>
        [EnumMember()]
        [ProtoEnum()]
        Affiliates,
        
        /// <remarks/>
        [EnumMember()]
        [ProtoEnum()]
        AirBus,
        
        /// <remarks/>
        [EnumMember()]
        [ProtoEnum()]
        BI,
        
        /// <remarks/>
        [EnumMember()]
        [ProtoEnum()]
        Car,
        
        /// <remarks/>
        [EnumMember()]
        [ProtoEnum()]
        Corp,
        
        /// <remarks/>
        [EnumMember()]
        [ProtoEnum()]
        Cruise,
        
        /// <remarks/>
        [EnumMember()]
        [ProtoEnum()]
        CustomerService,
        
        /// <remarks/>
        [EnumMember()]
        [ProtoEnum()]
        Destination,
        
        /// <remarks/>
        [EnumMember()]
        [ProtoEnum()]
        Diy,
        
        /// <remarks/>
        [EnumMember()]
        [ProtoEnum()]
        Fun,
        
        /// <remarks/>
        [EnumMember()]
        [ProtoEnum()]
        FRT,
        
        /// <remarks/>
        [EnumMember()]
        [ProtoEnum()]
        Finance,
        
        /// <remarks/>
        [EnumMember()]
        [ProtoEnum()]
        Flight,
        
        /// <remarks/>
        [EnumMember()]
        [ProtoEnum()]
        Framework,
        
        /// <remarks/>
        [EnumMember()]
        [ProtoEnum()]
        GS,
        
        /// <remarks/>
        [EnumMember()]
        [ProtoEnum()]
        Group,
        
        /// <remarks/>
        [EnumMember()]
        [ProtoEnum()]
        HHTravel,
        
        /// <remarks/>
        [EnumMember()]
        [ProtoEnum()]
        Hotel,
        
        /// <remarks/>
        [EnumMember()]
        [ProtoEnum()]
        Platform,
        
        /// <remarks/>
        [EnumMember()]
        [ProtoEnum()]
        TravelShopping,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/VacationFlightContract.xsd")]
    [System.Xml.Serialization.XmlRootAttribute("CustomerBossCheckResponse", Namespace="http://tempuri.org/VacationFlightContract.xsd", IsNullable=false)]
    [DataContract(Name="CustomerBossCheckResponse", Namespace="http://tempuri.org/VacationFlightContract.xsd")]
    [ProtoContract()]
    public partial class CustomerBossCheckResponseType : ISpecificRecord, IHasResponseStatus
    {
        
        private List<CheckResult> checkResultField;
        
        private ResponseStatusType responseStatusField;
        
        public static readonly CServiceStack.Baiji.Schema.Schema SCHEMA = CServiceStack.Baiji.Schema.Schema.Parse(((("{\"type\":\"record\",\"name\":\"CustomerBossCheckResponseType\",\"namespace\":\"" + typeof(CustomerBossCheckResponseType).Namespace) 
                        + (("\",\"doc\":null,\"fields\":[{\"name\":\"CheckResult\",\"type\":[{\"type\":\"array\",\"items\":{\"ty" +
                            "pe\":\"record\",\"name\":\"CheckResult\",\"namespace\":\"" + typeof(CheckResult).Namespace) 
                        + (("\",\"doc\":null,\"fields\":[{\"name\":\"UID\",\"type\":[\"string\",\"null\"]},{\"name\":\"Status\",\"" +
                            "type\":\"boolean\"}]}},\"null\"]},{\"name\":\"ResponseStatus\",\"type\":{\"type\":\"record\",\"n" +
                            "ame\":\"ResponseStatusType\",\"namespace\":\"" + typeof(ResponseStatusType).Namespace) 
                        + (("\",\"doc\":null,\"fields\":[{\"name\":\"Timestamp\",\"type\":\"datetime\"},{\"name\":\"Ack\",\"type" +
                            "\":{\"type\":\"enum\",\"name\":\"AckCodeType\",\"namespace\":\"" + typeof(AckCodeType).Namespace) 
                        + (("\",\"doc\":null,\"symbols\":[\"Success\",\"Failure\",\"Warning\",\"PartialFailure\"]}},{\"name\"" +
                            ":\"Errors\",\"type\":[{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"ErrorDataType" +
                            "\",\"namespace\":\"" + typeof(ErrorDataType).Namespace) 
                        + (("\",\"doc\":null,\"fields\":[{\"name\":\"Message\",\"type\":[\"string\",\"null\"]},{\"name\":\"Error" +
                            "Code\",\"type\":[\"string\",\"null\"]},{\"name\":\"StackTrace\",\"type\":[\"string\",\"null\"]},{" +
                            "\"name\":\"SeverityCode\",\"type\":{\"type\":\"enum\",\"name\":\"SeverityCodeType\",\"namespace" +
                            "\":\"" + typeof(SeverityCodeType).Namespace) 
                        + (("\",\"doc\":null,\"symbols\":[\"Error\",\"Warning\"]}},{\"name\":\"ErrorFields\",\"type\":[{\"type" +
                            "\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"ErrorFieldType\",\"namespace\":\"" + typeof(ErrorFieldType).Namespace) 
                        + ((@""",""doc"":null,""fields"":[{""name"":""FieldName"",""type"":[""string"",""null""]},{""name"":""ErrorCode"",""type"":[""string"",""null""]},{""name"":""Message"",""type"":[""string"",""null""]}]}},""null""]},{""name"":""ErrorClassification"",""type"":{""type"":""enum"",""name"":""ErrorClassificationCodeType"",""namespace"":""" + typeof(ErrorClassificationCodeType).Namespace) 
                        + (@""",""doc"":null,""symbols"":[""ServiceError"",""ValidationError"",""FrameworkError"",""SLAError""]}}]}},""null""]},{""name"":""Build"",""type"":[""string"",""null""]},{""name"":""Version"",""type"":[""string"",""null""]},{""name"":""Extension"",""type"":[{""type"":""array"",""items"":{""type"":""record"",""name"":""ExtensionType"",""namespace"":""" + typeof(ExtensionType).Namespace))))))))) 
                        + "\",\"doc\":null,\"fields\":[{\"name\":\"Id\",\"type\":[\"string\",\"null\"]},{\"name\":\"Version\",\"" +
                            "type\":[\"string\",\"null\"]},{\"name\":\"ContentType\",\"type\":[\"string\",\"null\"]},{\"name\"" +
                            ":\"Value\",\"type\":[\"string\",\"null\"]}]}},\"null\"]}]}}]}"));
        
        /// <summary>
        /// 是否成功
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("CheckResult")]
        [DataMember()]
        [ProtoMember(1)]
        public List<CheckResult> CheckResult
        {
            get
            {
                if ((this.checkResultField == null))
                {
                    this.checkResultField = new List<CheckResult>();
                }
                return this.checkResultField;
            }
            set
            {
                this.checkResultField = value;
            }
        }
        
        /// <summary>
        /// 接口返回的状态说明
        /// </summary>
        [DataMember()]
        [ProtoMember(2)]
        public ResponseStatusType ResponseStatus
        {
            get
            {
                return this.responseStatusField;
            }
            set
            {
                this.responseStatusField = value;
            }
        }
        
        public virtual CServiceStack.Baiji.Schema.Schema GetSchema()
        {
            return SCHEMA;
        }
        
        public virtual object Get(int fieldPos)
        {
            switch(fieldPos)
            {
                case 0: return this.CheckResult;
                case 1: return this.ResponseStatus;
                default: throw new CServiceStack.Baiji.Exceptions.BaijiRuntimeException("Bad index " + fieldPos + " in Get()");
            }
        }
        
        public virtual void Put(int fieldPos, object fieldValue)
        {
            switch(fieldPos)
            {
                case 0: this.CheckResult = (List<CheckResult>)fieldValue; break;
                case 1: this.ResponseStatus = (ResponseStatusType)fieldValue; break;
                default: throw new CServiceStack.Baiji.Exceptions.BaijiRuntimeException("Bad index " + fieldPos + " in Put()");
            }
        }
        
        public virtual object Get(string fieldName)
        {
            var recordSchema = GetSchema() as CServiceStack.Baiji.Schema.RecordSchema;
            if (recordSchema == null)
            {
                return null;
            }
            CServiceStack.Baiji.Schema.Field field;
            if (!recordSchema.TryGetField(fieldName, out field))
            {
                return null;
            }
            return Get(field.Pos);
        }
        
        public virtual void Put(string fieldName, object fieldValue)
        {
            var recordSchema = GetSchema() as CServiceStack.Baiji.Schema.RecordSchema;
            if (recordSchema == null)
            {
                return ;
            }
            CServiceStack.Baiji.Schema.Field field;
            if (!recordSchema.TryGetField(fieldName, out field))
            {
                return ;
            }
            Put(field.Pos, fieldValue);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/VacationFlightContract.xsd")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://tempuri.org/VacationFlightContract.xsd", IsNullable=true)]
    [DataContract(Namespace="http://tempuri.org/VacationFlightContract.xsd")]
    [ProtoContract()]
    public partial class CheckResult : ISpecificRecord
    {
        
        private string uIDField;
        
        private bool statusField;
        
        public static readonly CServiceStack.Baiji.Schema.Schema SCHEMA = CServiceStack.Baiji.Schema.Schema.Parse((("{\"type\":\"record\",\"name\":\"CheckResult\",\"namespace\":\"" + typeof(CheckResult).Namespace) 
                        + "\",\"doc\":null,\"fields\":[{\"name\":\"UID\",\"type\":[\"string\",\"null\"]},{\"name\":\"Status\",\"" +
                            "type\":\"boolean\"}]}"));
        
        /// <summary>
        /// 客户ID
        /// </summary>
        [DataMember()]
        [ProtoMember(1)]
        public string UID
        {
            get
            {
                return this.uIDField;
            }
            set
            {
                this.uIDField = value;
            }
        }
        
        /// <summary>
        /// 结果:true是boss客户,false不是
        /// </summary>
        [DataMember()]
        [ProtoMember(2)]
        public bool Status
        {
            get
            {
                return this.statusField;
            }
            set
            {
                this.statusField = value;
            }
        }
        
        public virtual CServiceStack.Baiji.Schema.Schema GetSchema()
        {
            return SCHEMA;
        }
        
        public virtual object Get(int fieldPos)
        {
            switch(fieldPos)
            {
                case 0: return this.UID;
                case 1: return this.Status;
                default: throw new CServiceStack.Baiji.Exceptions.BaijiRuntimeException("Bad index " + fieldPos + " in Get()");
            }
        }
        
        public virtual void Put(int fieldPos, object fieldValue)
        {
            switch(fieldPos)
            {
                case 0: this.UID = (System.String)fieldValue; break;
                case 1: this.Status = (bool)fieldValue; break;
                default: throw new CServiceStack.Baiji.Exceptions.BaijiRuntimeException("Bad index " + fieldPos + " in Put()");
            }
        }
        
        public virtual object Get(string fieldName)
        {
            var recordSchema = GetSchema() as CServiceStack.Baiji.Schema.RecordSchema;
            if (recordSchema == null)
            {
                return null;
            }
            CServiceStack.Baiji.Schema.Field field;
            if (!recordSchema.TryGetField(fieldName, out field))
            {
                return null;
            }
            return Get(field.Pos);
        }
        
        public virtual void Put(string fieldName, object fieldValue)
        {
            var recordSchema = GetSchema() as CServiceStack.Baiji.Schema.RecordSchema;
            if (recordSchema == null)
            {
                return ;
            }
            CServiceStack.Baiji.Schema.Field field;
            if (!recordSchema.TryGetField(fieldName, out field))
            {
                return ;
            }
            Put(field.Pos, fieldValue);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/VacationFlightContract.xsd")]
    [System.Xml.Serialization.XmlRootAttribute("IntegralApplyRequest", Namespace="http://tempuri.org/VacationFlightContract.xsd", IsNullable=false)]
    [DataContract(Name="IntegralApplyRequest", Namespace="http://tempuri.org/VacationFlightContract.xsd")]
    [ProtoContract()]
    public partial class IntegralApplyRequestType : ISpecificRecord
    {
        
        private int auditidField;
        
        private string uidField;
        
        private string eidField;
        
        private int pointsAmountField;
        
        private int basePointAmountField;
        
        private float pointFactorField;
        
        private string pointReasonField;
        
        private int policyTypeField;
        
        public static readonly CServiceStack.Baiji.Schema.Schema SCHEMA = CServiceStack.Baiji.Schema.Schema.Parse((("{\"type\":\"record\",\"name\":\"IntegralApplyRequestType\",\"namespace\":\"" + typeof(IntegralApplyRequestType).Namespace) 
                        + @""",""doc"":null,""fields"":[{""name"":""auditid"",""type"":""int""},{""name"":""uid"",""type"":[""string"",""null""]},{""name"":""eid"",""type"":[""string"",""null""]},{""name"":""pointsAmount"",""type"":""int""},{""name"":""basePointAmount"",""type"":""int""},{""name"":""pointFactor"",""type"":""float""},{""name"":""pointReason"",""type"":[""string"",""null""]},{""name"":""policyType"",""type"":""int""}]}"));
        
        /// <summary>
        /// 外部ID
        /// </summary>
        [DataMember()]
        [ProtoMember(1)]
        public int auditid
        {
            get
            {
                return this.auditidField;
            }
            set
            {
                this.auditidField = value;
            }
        }
        
        /// <summary>
        /// 用户ID
        /// </summary>
        [DataMember()]
        [ProtoMember(2)]
        public string uid
        {
            get
            {
                return this.uidField;
            }
            set
            {
                this.uidField = value;
            }
        }
        
        /// <summary>
        /// 操作人员EID
        /// </summary>
        [DataMember()]
        [ProtoMember(3)]
        public string eid
        {
            get
            {
                return this.eidField;
            }
            set
            {
                this.eidField = value;
            }
        }
        
        /// <summary>
        /// 调整积分
        /// </summary>
        [DataMember()]
        [ProtoMember(4)]
        public int pointsAmount
        {
            get
            {
                return this.pointsAmountField;
            }
            set
            {
                this.pointsAmountField = value;
            }
        }
        
        /// <summary>
        /// 调整基础积分
        /// </summary>
        [DataMember()]
        [ProtoMember(5)]
        public int basePointAmount
        {
            get
            {
                return this.basePointAmountField;
            }
            set
            {
                this.basePointAmountField = value;
            }
        }
        
        /// <summary>
        /// 积分系数
        /// </summary>
        [DataMember()]
        [ProtoMember(6)]
        public float pointFactor
        {
            get
            {
                return this.pointFactorField;
            }
            set
            {
                this.pointFactorField = value;
            }
        }
        
        /// <summary>
        /// 积分调整原因
        /// </summary>
        [DataMember()]
        [ProtoMember(7)]
        public string pointReason
        {
            get
            {
                return this.pointReasonField;
            }
            set
            {
                this.pointReasonField = value;
            }
        }
        
        /// <summary>
        /// 积分策略：1，加积分，2，减积分，3，从最早开始减积分
        /// </summary>
        [DataMember()]
        [ProtoMember(8)]
        public int policyType
        {
            get
            {
                return this.policyTypeField;
            }
            set
            {
                this.policyTypeField = value;
            }
        }
        
        public virtual CServiceStack.Baiji.Schema.Schema GetSchema()
        {
            return SCHEMA;
        }
        
        public virtual object Get(int fieldPos)
        {
            switch(fieldPos)
            {
                case 0: return this.auditid;
                case 1: return this.uid;
                case 2: return this.eid;
                case 3: return this.pointsAmount;
                case 4: return this.basePointAmount;
                case 5: return this.pointFactor;
                case 6: return this.pointReason;
                case 7: return this.policyType;
                default: throw new CServiceStack.Baiji.Exceptions.BaijiRuntimeException("Bad index " + fieldPos + " in Get()");
            }
        }
        
        public virtual void Put(int fieldPos, object fieldValue)
        {
            switch(fieldPos)
            {
                case 0: this.auditid = (int)fieldValue; break;
                case 1: this.uid = (System.String)fieldValue; break;
                case 2: this.eid = (System.String)fieldValue; break;
                case 3: this.pointsAmount = (int)fieldValue; break;
                case 4: this.basePointAmount = (int)fieldValue; break;
                case 5: this.pointFactor = (float)fieldValue; break;
                case 6: this.pointReason = (System.String)fieldValue; break;
                case 7: this.policyType = (int)fieldValue; break;
                default: throw new CServiceStack.Baiji.Exceptions.BaijiRuntimeException("Bad index " + fieldPos + " in Put()");
            }
        }
        
        public virtual object Get(string fieldName)
        {
            var recordSchema = GetSchema() as CServiceStack.Baiji.Schema.RecordSchema;
            if (recordSchema == null)
            {
                return null;
            }
            CServiceStack.Baiji.Schema.Field field;
            if (!recordSchema.TryGetField(fieldName, out field))
            {
                return null;
            }
            return Get(field.Pos);
        }
        
        public virtual void Put(string fieldName, object fieldValue)
        {
            var recordSchema = GetSchema() as CServiceStack.Baiji.Schema.RecordSchema;
            if (recordSchema == null)
            {
                return ;
            }
            CServiceStack.Baiji.Schema.Field field;
            if (!recordSchema.TryGetField(fieldName, out field))
            {
                return ;
            }
            Put(field.Pos, fieldValue);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/VacationFlightContract.xsd")]
    [System.Xml.Serialization.XmlRootAttribute("IntegralApplyResponse", Namespace="http://tempuri.org/VacationFlightContract.xsd", IsNullable=false)]
    [DataContract(Name="IntegralApplyResponse", Namespace="http://tempuri.org/VacationFlightContract.xsd")]
    [ProtoContract()]
    public partial class IntegralApplyResponseType : ISpecificRecord, IHasResponseStatus
    {
        
        private int resultTypeField;
        
        private ResponseStatusType responseStatusField;
        
        public static readonly CServiceStack.Baiji.Schema.Schema SCHEMA = CServiceStack.Baiji.Schema.Schema.Parse(((("{\"type\":\"record\",\"name\":\"IntegralApplyResponseType\",\"namespace\":\"" + typeof(IntegralApplyResponseType).Namespace) 
                        + (("\",\"doc\":null,\"fields\":[{\"name\":\"resultType\",\"type\":\"int\"},{\"name\":\"ResponseStatus" +
                            "\",\"type\":{\"type\":\"record\",\"name\":\"ResponseStatusType\",\"namespace\":\"" + typeof(ResponseStatusType).Namespace) 
                        + (("\",\"doc\":null,\"fields\":[{\"name\":\"Timestamp\",\"type\":\"datetime\"},{\"name\":\"Ack\",\"type" +
                            "\":{\"type\":\"enum\",\"name\":\"AckCodeType\",\"namespace\":\"" + typeof(AckCodeType).Namespace) 
                        + (("\",\"doc\":null,\"symbols\":[\"Success\",\"Failure\",\"Warning\",\"PartialFailure\"]}},{\"name\"" +
                            ":\"Errors\",\"type\":[{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"ErrorDataType" +
                            "\",\"namespace\":\"" + typeof(ErrorDataType).Namespace) 
                        + (("\",\"doc\":null,\"fields\":[{\"name\":\"Message\",\"type\":[\"string\",\"null\"]},{\"name\":\"Error" +
                            "Code\",\"type\":[\"string\",\"null\"]},{\"name\":\"StackTrace\",\"type\":[\"string\",\"null\"]},{" +
                            "\"name\":\"SeverityCode\",\"type\":{\"type\":\"enum\",\"name\":\"SeverityCodeType\",\"namespace" +
                            "\":\"" + typeof(SeverityCodeType).Namespace) 
                        + (("\",\"doc\":null,\"symbols\":[\"Error\",\"Warning\"]}},{\"name\":\"ErrorFields\",\"type\":[{\"type" +
                            "\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"ErrorFieldType\",\"namespace\":\"" + typeof(ErrorFieldType).Namespace) 
                        + ((@""",""doc"":null,""fields"":[{""name"":""FieldName"",""type"":[""string"",""null""]},{""name"":""ErrorCode"",""type"":[""string"",""null""]},{""name"":""Message"",""type"":[""string"",""null""]}]}},""null""]},{""name"":""ErrorClassification"",""type"":{""type"":""enum"",""name"":""ErrorClassificationCodeType"",""namespace"":""" + typeof(ErrorClassificationCodeType).Namespace) 
                        + (@""",""doc"":null,""symbols"":[""ServiceError"",""ValidationError"",""FrameworkError"",""SLAError""]}}]}},""null""]},{""name"":""Build"",""type"":[""string"",""null""]},{""name"":""Version"",""type"":[""string"",""null""]},{""name"":""Extension"",""type"":[{""type"":""array"",""items"":{""type"":""record"",""name"":""ExtensionType"",""namespace"":""" + typeof(ExtensionType).Namespace)))))))) 
                        + "\",\"doc\":null,\"fields\":[{\"name\":\"Id\",\"type\":[\"string\",\"null\"]},{\"name\":\"Version\",\"" +
                            "type\":[\"string\",\"null\"]},{\"name\":\"ContentType\",\"type\":[\"string\",\"null\"]},{\"name\"" +
                            ":\"Value\",\"type\":[\"string\",\"null\"]}]}},\"null\"]}]}}]}"));
        
        /// <summary>
        /// 处理状态：0，系统接受失败，1:系统接受成功
        /// </summary>
        [DataMember()]
        [ProtoMember(1)]
        public int resultType
        {
            get
            {
                return this.resultTypeField;
            }
            set
            {
                this.resultTypeField = value;
            }
        }
        
        [DataMember()]
        [ProtoMember(2)]
        public ResponseStatusType ResponseStatus
        {
            get
            {
                return this.responseStatusField;
            }
            set
            {
                this.responseStatusField = value;
            }
        }
        
        public virtual CServiceStack.Baiji.Schema.Schema GetSchema()
        {
            return SCHEMA;
        }
        
        public virtual object Get(int fieldPos)
        {
            switch(fieldPos)
            {
                case 0: return this.resultType;
                case 1: return this.ResponseStatus;
                default: throw new CServiceStack.Baiji.Exceptions.BaijiRuntimeException("Bad index " + fieldPos + " in Get()");
            }
        }
        
        public virtual void Put(int fieldPos, object fieldValue)
        {
            switch(fieldPos)
            {
                case 0: this.resultType = (int)fieldValue; break;
                case 1: this.ResponseStatus = (ResponseStatusType)fieldValue; break;
                default: throw new CServiceStack.Baiji.Exceptions.BaijiRuntimeException("Bad index " + fieldPos + " in Put()");
            }
        }
        
        public virtual object Get(string fieldName)
        {
            var recordSchema = GetSchema() as CServiceStack.Baiji.Schema.RecordSchema;
            if (recordSchema == null)
            {
                return null;
            }
            CServiceStack.Baiji.Schema.Field field;
            if (!recordSchema.TryGetField(fieldName, out field))
            {
                return null;
            }
            return Get(field.Pos);
        }
        
        public virtual void Put(string fieldName, object fieldValue)
        {
            var recordSchema = GetSchema() as CServiceStack.Baiji.Schema.RecordSchema;
            if (recordSchema == null)
            {
                return ;
            }
            CServiceStack.Baiji.Schema.Field field;
            if (!recordSchema.TryGetField(fieldName, out field))
            {
                return ;
            }
            Put(field.Pos, fieldValue);
        }
    }
}
