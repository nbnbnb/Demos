//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Offline.SoaService.Contract
{
    using CServiceStack.ServiceHost;
    using CServiceStack.Common.Types;
    
    
    /// <summary>
    /// Service interface auto-generated by SOA tool, DO NOT CHANGE!
    /// 
    /// 注意，实现该接口的服务在CServiceStack服务容器中是以new instance per request的形式被初始化的，
    /// 也就是说，容器会为每个请求创建一个新的服务实例，并在请求结束时释放(release)，而不是单个
    /// 服务实例(singleton)服务所有的请求, 所以请务必不要在服务初始化（例如构造函数中）时做较重的初始化
    /// （例如初始化数据库等）动作，否则对性能有很大影响，如果有较重的初始化动作，
    /// 请在服务实现中以静态方式（例如静态构造函数中)一次性完成，或者以IoC注入方式初始化，在服务容器
    /// 启动时事先将依赖初始化并注册在容器中，让容器在构造服务实例时自动解析和注入依赖(也可在服务实现中手动解析依赖)，
    /// 关于静态和依赖注入初始化的样例，请参考CServiceStack提供的样例程序.
    /// 
    /// 
    /// </summary>
    [CServiceInterface("CustomerOfflineAppService", "http://soa.ctrip.com/platform/crm/offline/v1", "2.0.6.1")]
    public interface ICustomerOfflineAppService
    {
        
        CheckHealthResponseType CheckHealth(CheckHealthRequestType request);
        
        CustomerBossCheckResponseType CustomerBossCheck(CustomerBossCheckRequestType request);
        
        IntegralApplyResponseType IntegralApply(IntegralApplyRequestType request);
    }
}
