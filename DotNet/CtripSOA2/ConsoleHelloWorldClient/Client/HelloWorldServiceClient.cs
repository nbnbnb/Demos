//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18444
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsoleHelloWorldClient.Client
{
    using System;
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System.Collections;
    using System.Xml.Schema;
    using System.ComponentModel;
    using System.Runtime.Serialization;
    using System.Collections.Generic;
    using CServiceStack.ProtoBuf;
    using System.Threading;
    using System.Threading.Tasks;
    using CServiceStack.ServiceHost;
    using CServiceStack.ServiceClient;
    using CServiceStack.Common.Types;
    
    
    /// <summary>
    /// Hello请求类型
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://soa.ctrip.com/thingstodo/order/settlementopenapi/v1")]
    [System.Xml.Serialization.XmlRootAttribute("HelloRequest", Namespace="http://soa.ctrip.com/thingstodo/order/settlementopenapi/v1", IsNullable=false)]
    [DataContract(Name="HelloRequest", Namespace="http://soa.ctrip.com/thingstodo/order/settlementopenapi/v1")]
    [ProtoContract()]
    public partial class HelloRequestType
    {
        
        private long orderIdField;
        
        private int unitQuantityField;
        
        private System.DateTime endDateField;
        
        private decimal priceField;
        
        /// <summary>
        /// 订单号
        /// </summary>
        [DataMember()]
        [ProtoMember(1)]
        public long OrderId
        {
            get
            {
                return this.orderIdField;
            }
            set
            {
                this.orderIdField = value;
            }
        }
        
        /// <summary>
        /// 单位数量
        /// </summary>
        [DataMember()]
        [ProtoMember(2)]
        public int UnitQuantity
        {
            get
            {
                return this.unitQuantityField;
            }
            set
            {
                this.unitQuantityField = value;
            }
        }
        
        /// <summary>
        /// 结束时间
        /// </summary>
        [DataMember()]
        [ProtoMember(3)]
        public System.DateTime EndDate
        {
            get
            {
                return this.endDateField;
            }
            set
            {
                this.endDateField = value;
            }
        }
        
        /// <summary>
        /// 卖价
        /// </summary>
        [DataMember()]
        [ProtoMember(4)]
        public decimal Price
        {
            get
            {
                return this.priceField;
            }
            set
            {
                this.priceField = value;
            }
        }
    }
    
    /// <summary>
    /// Hello响应类型
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://soa.ctrip.com/thingstodo/order/settlementopenapi/v1")]
    [System.Xml.Serialization.XmlRootAttribute("HelloResponse", Namespace="http://soa.ctrip.com/thingstodo/order/settlementopenapi/v1", IsNullable=false)]
    [DataContract(Name="HelloResponse", Namespace="http://soa.ctrip.com/thingstodo/order/settlementopenapi/v1")]
    [ProtoContract()]
    public partial class HelloResponseType : IHasResponseStatus
    {
        
        private ResponseStatusType responseStatusField;
        
        private bool isSuccessField;
        
        private int errorCodeField;
        
        private string errorMessageField;
        
        private string resultField;
        
        /// <summary>
        /// 响应状态
        /// </summary>
        [DataMember()]
        [ProtoMember(1)]
        public ResponseStatusType ResponseStatus
        {
            get
            {
                return this.responseStatusField;
            }
            set
            {
                this.responseStatusField = value;
            }
        }
        
        /// <summary>
        /// 是否成功
        /// </summary>
        [DataMember()]
        [ProtoMember(2)]
        public bool IsSuccess
        {
            get
            {
                return this.isSuccessField;
            }
            set
            {
                this.isSuccessField = value;
            }
        }
        
        /// <summary>
        /// 失败代码
        /// </summary>
        [DataMember()]
        [ProtoMember(3)]
        public int ErrorCode
        {
            get
            {
                return this.errorCodeField;
            }
            set
            {
                this.errorCodeField = value;
            }
        }
        
        /// <summary>
        /// 错误信息
        /// </summary>
        [DataMember()]
        [ProtoMember(4)]
        public string ErrorMessage
        {
            get
            {
                return this.errorMessageField;
            }
            set
            {
                this.errorMessageField = value;
            }
        }
        
        /// <summary>
        /// 返回消息
        /// </summary>
        [DataMember()]
        [ProtoMember(5)]
        public string Result
        {
            get
            {
                return this.resultField;
            }
            set
            {
                this.resultField = value;
            }
        }
    }
    
    /// <summary>
    /// Service client auto-generated by SOA tool, DO NOT CHANGE!
    /// 
    /// a demo hello world service
    /// </summary>
    public class HelloWorldServiceClient : ServiceClientBase<HelloWorldServiceClient>
    {
        
        public const string CodeGeneratorVersion = "2.0.3.2";
        
        public const string OriginalServiceName = "HelloWorldService";
        
        public const string OriginalServiceNamespace = "http://soa.ctrip.com/framework/soa/sample/v1";
        
        private HelloWorldServiceClient(string baseUri) : 
                base(baseUri)
        {
        }
        
        private HelloWorldServiceClient(string serviceName, string serviceNamespace, string subEnv) : 
                base(serviceName, serviceNamespace, subEnv)
        {
        }
        
        public virtual HelloResponseType Hello(HelloRequestType helloIn)
        {
            return base.Invoke<HelloResponseType>("Hello", helloIn);
        }
        
        public virtual Task<HelloResponseType> CreateAsyncTaskOfHello(HelloRequestType helloIn, CancellationToken? cancellationToken = null, TaskCreationOptions? taskCreationOptions = null)
        {
            return base.CreateAsyncTask<HelloRequestType, HelloResponseType>("Hello", helloIn, cancellationToken, taskCreationOptions);
        }
        
        public virtual Task<HelloResponseType> StartIOCPTaskOfHello(HelloRequestType helloIn)
        {
            return base.StartIOCPTask<HelloResponseType>("Hello", helloIn);
        }
        
        public virtual CheckHealthResponseType CheckHealth(CheckHealthRequestType checkHealthIn)
        {
            return base.Invoke<CheckHealthResponseType>("CheckHealth", checkHealthIn);
        }
        
        public virtual Task<CheckHealthResponseType> CreateAsyncTaskOfCheckHealth(CheckHealthRequestType checkHealthIn, CancellationToken? cancellationToken = null, TaskCreationOptions? taskCreationOptions = null)
        {
            return base.CreateAsyncTask<CheckHealthRequestType, CheckHealthResponseType>("CheckHealth", checkHealthIn, cancellationToken, taskCreationOptions);
        }
        
        public virtual Task<CheckHealthResponseType> StartIOCPTaskOfCheckHealth(CheckHealthRequestType checkHealthIn)
        {
            return base.StartIOCPTask<CheckHealthResponseType>("CheckHealth", checkHealthIn);
        }
    }
}
