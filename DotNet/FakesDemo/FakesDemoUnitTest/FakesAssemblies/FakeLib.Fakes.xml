<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FakeLib.Fakes</name>
    </assembly>
    <members>
        <member name="T:FakeLib.Fakes.ShimBaseClass">
            <summary>FakeLib.BaseClass 的填充码类型</summary>
        </member>
        <member name="M:FakeLib.Fakes.ShimBaseClass.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:FakeLib.Fakes.ShimBaseClass.#ctor(FakeLib.BaseClass)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:FakeLib.Fakes.ShimBaseClass.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:FakeLib.Fakes.ShimBaseClass.AllInstances.GetName">
            <summary>设置 BaseClass.GetName() 的 填充码</summary>
        </member>
        <member name="M:FakeLib.Fakes.ShimBaseClass.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:FakeLib.Fakes.ShimBaseClass.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:FakeLib.Fakes.ShimBaseClass.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:FakeLib.Fakes.ShimBaseClass.Constructor">
            <summary>设置 BaseClass.BaseClass() 的 填充码</summary>
        </member>
        <member name="P:FakeLib.Fakes.ShimBaseClass.GetName">
            <summary>设置 BaseClass.GetName() 的 填充码</summary>
        </member>
        <member name="T:FakeLib.Fakes.ShimMyBase">
            <summary>FakeLib.MyBase 的填充码类型</summary>
        </member>
        <member name="M:FakeLib.Fakes.ShimMyBase.#ctor(FakeLib.MyBase)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:FakeLib.Fakes.ShimMyBase.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:FakeLib.Fakes.ShimMyBase.AllInstances.MyMethod">
            <summary>设置 MyBase.MyMethod() 的 填充码</summary>
        </member>
        <member name="M:FakeLib.Fakes.ShimMyBase.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:FakeLib.Fakes.ShimMyBase.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:FakeLib.Fakes.ShimMyBase.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:FakeLib.Fakes.ShimMyBase.Constructor">
            <summary>设置 MyBase.MyBase() 的 填充码</summary>
        </member>
        <member name="P:FakeLib.Fakes.ShimMyBase.MyMethod">
            <summary>设置 MyBase.MyMethod() 的 填充码</summary>
        </member>
        <member name="T:FakeLib.Fakes.ShimMyChild">
            <summary>FakeLib.MyChild 的填充码类型</summary>
        </member>
        <member name="M:FakeLib.Fakes.ShimMyChild.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:FakeLib.Fakes.ShimMyChild.#ctor(FakeLib.MyChild)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:FakeLib.Fakes.ShimMyChild.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:FakeLib.Fakes.ShimMyChild.AllInstances.MyAddressGet">
            <summary>设置 MyChild.get_MyAddress() 的 填充码</summary>
        </member>
        <member name="P:FakeLib.Fakes.ShimMyChild.AllInstances.MyAddressSetString">
            <summary>设置 MyChild.set_MyAddress(String value) 的 填充码</summary>
        </member>
        <member name="M:FakeLib.Fakes.ShimMyChild.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:FakeLib.Fakes.ShimMyChild.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:FakeLib.Fakes.ShimMyChild.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:FakeLib.Fakes.ShimMyChild.Constructor">
            <summary>设置 MyChild.MyChild() 的 填充码</summary>
        </member>
        <member name="P:FakeLib.Fakes.ShimMyChild.MyAddressGet">
            <summary>设置 MyChild.get_MyAddress() 的 填充码</summary>
        </member>
        <member name="P:FakeLib.Fakes.ShimMyChild.MyAddressSetString">
            <summary>设置 MyChild.set_MyAddress(String value) 的 填充码</summary>
        </member>
        <member name="T:FakeLib.Fakes.ShimMyClass">
            <summary>FakeLib.MyClass 的填充码类型</summary>
        </member>
        <member name="M:FakeLib.Fakes.ShimMyClass.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:FakeLib.Fakes.ShimMyClass.#ctor(FakeLib.MyClass)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:FakeLib.Fakes.ShimMyClass.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:FakeLib.Fakes.ShimMyClass.AllInstances.MyMethod">
            <summary>设置 MyClass.MyMethod() 的 填充码</summary>
        </member>
        <member name="P:FakeLib.Fakes.ShimMyClass.AllInstances.NameGet">
            <summary>设置 MyClass.get_Name() 的 填充码</summary>
        </member>
        <member name="P:FakeLib.Fakes.ShimMyClass.AllInstances.NameSetString">
            <summary>设置 MyClass.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="M:FakeLib.Fakes.ShimMyClass.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:FakeLib.Fakes.ShimMyClass.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:FakeLib.Fakes.ShimMyClass.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:FakeLib.Fakes.ShimMyClass.Constructor">
            <summary>设置 MyClass.MyClass() 的 填充码</summary>
        </member>
        <member name="P:FakeLib.Fakes.ShimMyClass.ConstructorString">
            <summary>设置 MyClass.MyClass(String name) 的 填充码</summary>
        </member>
        <member name="P:FakeLib.Fakes.ShimMyClass.MyMethod">
            <summary>设置 MyClass.MyMethod() 的 填充码</summary>
        </member>
        <member name="P:FakeLib.Fakes.ShimMyClass.NameGet">
            <summary>设置 MyClass.get_Name() 的 填充码</summary>
        </member>
        <member name="P:FakeLib.Fakes.ShimMyClass.NameSetString">
            <summary>设置 MyClass.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="T:FakeLib.Fakes.ShimMyInterface">
            <summary>FakeLib.MyInterface 的填充码类型</summary>
        </member>
        <member name="M:FakeLib.Fakes.ShimMyInterface.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:FakeLib.Fakes.ShimMyInterface.#ctor(FakeLib.MyInterface)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:FakeLib.Fakes.ShimMyInterface.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:FakeLib.Fakes.ShimMyInterface.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 MyInterface.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:FakeLib.Fakes.ShimMyInterface.AllInstances.YouNameGet">
            <summary>设置 MyInterface.get_YouName() 的 填充码</summary>
        </member>
        <member name="P:FakeLib.Fakes.ShimMyInterface.AllInstances.YouNameSetString">
            <summary>设置 MyInterface.set_YouName(String value) 的 填充码</summary>
        </member>
        <member name="M:FakeLib.Fakes.ShimMyInterface.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:FakeLib.Fakes.ShimMyInterface.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:FakeLib.Fakes.ShimMyInterface.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:FakeLib.Fakes.ShimMyInterface.Bind(FakeLib.IInfo)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:FakeLib.Fakes.ShimMyInterface.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:FakeLib.Fakes.ShimMyInterface.Constructor">
            <summary>设置 MyInterface.MyInterface() 的 填充码</summary>
        </member>
        <member name="P:FakeLib.Fakes.ShimMyInterface.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 MyInterface.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:FakeLib.Fakes.ShimMyInterface.YouNameGet">
            <summary>设置 MyInterface.get_YouName() 的 填充码</summary>
        </member>
        <member name="P:FakeLib.Fakes.ShimMyInterface.YouNameSetString">
            <summary>设置 MyInterface.set_YouName(String value) 的 填充码</summary>
        </member>
        <member name="T:FakeLib.Fakes.ShimMyStaticClass">
            <summary>FakeLib.MyStaticClass 的填充码类型</summary>
        </member>
        <member name="M:FakeLib.Fakes.ShimMyStaticClass.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:FakeLib.Fakes.ShimMyStaticClass.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:FakeLib.Fakes.ShimMyStaticClass.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:FakeLib.Fakes.ShimMyStaticClass.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:FakeLib.Fakes.ShimMyStaticClass.GetAge">
            <summary>设置 MyStaticClass.GetAge() 的 填充码</summary>
        </member>
        <member name="T:FakeLib.Fakes.StubBaseClass">
            <summary>FakeLib.BaseClass 的存根类型</summary>
        </member>
        <member name="M:FakeLib.Fakes.StubBaseClass.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:FakeLib.Fakes.StubBaseClass.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:FakeLib.Fakes.StubBaseClass.GetName">
            <summary>设置 BaseClass.GetName() 的 存根</summary>
        </member>
        <member name="F:FakeLib.Fakes.StubBaseClass.GetName01">
            <summary>设置 BaseClass.GetName() 的 stub</summary>
        </member>
        <member name="M:FakeLib.Fakes.StubBaseClass.InitializeStub">
            <summary>初始化 type StubBaseClass 的新实例</summary>
        </member>
        <member name="P:FakeLib.Fakes.StubBaseClass.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:FakeLib.Fakes.StubBaseClass.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:FakeLib.Fakes.StubIFileSystem">
            <summary>FakeLib.IFileSystem 的存根类型</summary>
        </member>
        <member name="M:FakeLib.Fakes.StubIFileSystem.#ctor">
            <summary>初始化 type StubIFileSystem 的新实例</summary>
        </member>
        <member name="M:FakeLib.Fakes.StubIFileSystem.AttachBackingFieldToMyAge">
            <summary>附加委托以将 StubIFileSystem.MyAge 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:FakeLib.Fakes.StubIFileSystem.DoNothing">
            <summary>设置 IFileSystem.DoNothing() 的 stub</summary>
        </member>
        <member name="M:FakeLib.Fakes.StubIFileSystem.FakeLib#IFileSystem#DoNothing">
            <summary>设置 IFileSystem.DoNothing() 的 存根</summary>
        </member>
        <member name="M:FakeLib.Fakes.StubIFileSystem.FakeLib#IFileSystem#GetValue``1">
            <summary>设置 IFileSystem.GetValue() 的 存根</summary>
        </member>
        <member name="M:FakeLib.Fakes.StubIFileSystem.FakeLib#IFileSystem#MyMethod(System.String)">
            <summary>设置 IFileSystem.MyMethod(String value) 的 存根</summary>
        </member>
        <member name="M:FakeLib.Fakes.StubIFileSystem.FakeLib#IFileSystem#ReadAllText(System.String)">
            <summary>设置 IFileSystem.ReadAllText(String fileName) 的 存根</summary>
        </member>
        <member name="M:FakeLib.Fakes.StubIFileSystem.GetValueOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>设置 GetValue() 的存根</summary>
        </member>
        <member name="P:FakeLib.Fakes.StubIFileSystem.FakeLib#IFileSystem#MyAge">
            <summary>设置 IFileSystem.get_MyAge() 的 stub</summary>
        </member>
        <member name="F:FakeLib.Fakes.StubIFileSystem.MyAgeGet">
            <summary>设置 IFileSystem.get_MyAge() 的 stub</summary>
        </member>
        <member name="F:FakeLib.Fakes.StubIFileSystem.MyAgeSetInt32">
            <summary>设置 IFileSystem.set_MyAge(Int32 value) 的 stub</summary>
        </member>
        <member name="F:FakeLib.Fakes.StubIFileSystem.MyMethodString">
            <summary>设置 IFileSystem.MyMethod(String value) 的 stub</summary>
        </member>
        <member name="F:FakeLib.Fakes.StubIFileSystem.ReadAllTextString">
            <summary>设置 IFileSystem.ReadAllText(String fileName) 的 stub</summary>
        </member>
        <member name="T:FakeLib.Fakes.StubIInfo">
            <summary>FakeLib.IInfo 的存根类型</summary>
        </member>
        <member name="M:FakeLib.Fakes.StubIInfo.#ctor">
            <summary>初始化 type StubIInfo 的新实例</summary>
        </member>
        <member name="M:FakeLib.Fakes.StubIInfo.AttachBackingFieldToYouName">
            <summary>附加委托以将 StubIInfo.YouName 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:FakeLib.Fakes.StubIInfo.FakeLib#IInfo#YouName">
            <summary>设置 IInfo.get_YouName() 的 stub</summary>
        </member>
        <member name="F:FakeLib.Fakes.StubIInfo.YouNameGet">
            <summary>设置 IInfo.get_YouName() 的 stub</summary>
        </member>
        <member name="F:FakeLib.Fakes.StubIInfo.YouNameSetString">
            <summary>设置 IInfo.set_YouName(String value) 的 stub</summary>
        </member>
        <member name="T:FakeLib.Fakes.StubMyBase">
            <summary>FakeLib.MyBase 的存根类型</summary>
        </member>
        <member name="M:FakeLib.Fakes.StubMyBase.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:FakeLib.Fakes.StubMyBase.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:FakeLib.Fakes.StubMyBase.InitializeStub">
            <summary>初始化 type StubMyBase 的新实例</summary>
        </member>
        <member name="P:FakeLib.Fakes.StubMyBase.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:FakeLib.Fakes.StubMyBase.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:FakeLib.Fakes.StubMyChild">
            <summary>FakeLib.MyChild 的存根类型</summary>
        </member>
        <member name="M:FakeLib.Fakes.StubMyChild.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:FakeLib.Fakes.StubMyChild.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:FakeLib.Fakes.StubMyChild.InitializeStub">
            <summary>初始化 type StubMyChild 的新实例</summary>
        </member>
        <member name="P:FakeLib.Fakes.StubMyChild.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:FakeLib.Fakes.StubMyChild.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:FakeLib.Fakes.StubMyClass">
            <summary>FakeLib.MyClass 的存根类型</summary>
        </member>
        <member name="M:FakeLib.Fakes.StubMyClass.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:FakeLib.Fakes.StubMyClass.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:FakeLib.Fakes.StubMyClass.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:FakeLib.Fakes.StubMyClass.InitializeStub">
            <summary>初始化 type StubMyClass 的新实例</summary>
        </member>
        <member name="P:FakeLib.Fakes.StubMyClass.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:FakeLib.Fakes.StubMyClass.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:FakeLib.Fakes.StubMyInterface">
            <summary>FakeLib.MyInterface 的存根类型</summary>
        </member>
        <member name="M:FakeLib.Fakes.StubMyInterface.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:FakeLib.Fakes.StubMyInterface.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:FakeLib.Fakes.StubMyInterface.InitializeStub">
            <summary>初始化 type StubMyInterface 的新实例</summary>
        </member>
        <member name="P:FakeLib.Fakes.StubMyInterface.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:FakeLib.Fakes.StubMyInterface.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
    </members>
</doc>
