<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <system.serviceModel>
    <client>
      <endpoint
        address="net.tcp://www.zhangjin.me/CalculatorService"
        binding="netTcpBinding"
        bindingConfiguration="transportTcpBinding"
        behaviorConfiguration="PeerTrustSvcCertValidation"
        contract="CalculatorContract"
        name="tcpPoint">
        <identity>
          <!--storeName 可以为 My 或  TrustedPeople-->
          <dns value="www.zhangjin.me"/>
          <!--
          <certificateReference findValue="www.zhangjin.me"
                                storeName="TrustedPeople"
                                x509FindType="FindBySubjectName"
                                storeLocation="LocalMachine"/>-->
        </identity>
      </endpoint>

      <endpoint
        address="https://www.zhangjin.me:3721/CalculatorService"
        binding="ws2007HttpBinding"
        bindingConfiguration="transportWS2007HttpBinding"
        behaviorConfiguration="PeerTrustSvcCertValidation"
        contract="CalculatorContract"
        name="httpsSelfPoint">
        <identity>
          <!-- dns 可以任意值， certificateReference 指定报错 -->
          <dns value="www.abc.com"/>
        </identity>
      </endpoint>

      <endpoint
       address="https://www.zhangjin.me/WebHosting/CalculatorService.svc"
       binding="ws2007HttpBinding"
       bindingConfiguration="transportWS2007HttpBinding"
       behaviorConfiguration="PeerTrustSvcCertValidation"
       contract="CalculatorContract"
       name="httpsIISPoint">
        <identity>
          <!-- dns 可以任意值， certificateReference 指定报错 -->
          <dns value="www.xxx.com"/>
        </identity>
      </endpoint>

    </client>
    <bindings>
      <netTcpBinding>
        <binding name="transportTcpBinding">
          <security mode="Transport">
            <transport clientCredentialType="None" />
          </security>
        </binding>
      </netTcpBinding>
      <ws2007HttpBinding>
        <binding name="transportWS2007HttpBinding">
          <security mode="Transport">
            <transport clientCredentialType="None" />
          </security>
        </binding>
      </ws2007HttpBinding>
    </bindings>
    <behaviors>
      <endpointBehaviors>
        <behavior name="PeerTrustSvcCertValidation">
          <clientCredentials>
            <serviceCertificate>
              <authentication certificateValidationMode="PeerTrust"/>
            </serviceCertificate>
          </clientCredentials>
        </behavior>
      </endpointBehaviors>
    </behaviors>
  </system.serviceModel>
</configuration>

<!--
客户端提示 SecurityNegotiationException 异常

WCF 默认采用 ChainTrust 模式对服务器证书进行验证
该认证模式要求服务证书的颁发机构必需是“受信任根证书颁发机构”

SSL Over TCP 寄宿

解决方式
1，将服务证书的颁发机构纳入受信任根证书颁发机构中；可以通过 MMC 的证书管理单元的导入/导出功能将颁发机构的证书导入受信任根证书颁发机构存储区中。
但是不幸的是，由于 CA 证书是通过 MakeCert.exe 创建的，即使导入到受信任根证书颁发机构存储区，它也不能作为受信任的 CA

2，通过 System.ServiceModel.Description.ClientCredentials 这个终结点行为改变默认的认证模式（不验证或验证“受信任人”存储区）
可以通过配置和代码进行设置
配置：endpoint 的 behaviorConfiguration ，如上 behaviorConfiguration="IgnoreSvcCertValidation"
代码：重写 CertificateValidationMode，如下
            using (ChannelFactory<ICalculator> channelFactory = new ChannelFactory<ICalculator>("tcpPoint"))
            {
                channelFactory.Credentials.ServiceCertificate.Authentication.CertificateValidationMode =
                    System.ServiceModel.Security.X509CertificateValidationMode.None;
                ICalculator proxy = channelFactory.CreateChannel();
                proxy.Add(1, 2);
                Console.WriteLine("服务调用完成");
                Console.ReadKey(true);
            }



HTTPS（自我寄宿）


  添加端口证书映射（appid 用一个任意的 GUID）
    netsh http add sslcert ipport=0.0.0.0:3721 certhash=‎038ab6d9eb1eafd56d617135453a448eb171e953 appid={393fbfdc-a530-4ad6-8c5a-2222d4c80cd8}
  删除端口映射
    netsh http del sslcert ipport=0.0.0.0:3721

  HTTPS 寄宿时，默认也是读取“受信任根证书颁发机构”存储区
  改变 HTTPS 寄宿时 证书的认证方式
  ServicePointManager.ServerCertificateValidationCallback += (sender, certificate, chain, sslPolicyErrors) => true;           
-->